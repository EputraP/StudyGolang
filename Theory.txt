--------------------------Go CLI-------------------
- go build     : compiles a bunch of code files
- go run       : compiles and executes one or two files
- go fmt       : formats all the code in each file in the current dierctory
- go install   : compiles and install a package
- go get       : downloads the raw source code of someone else's package
- go test      : runs any test associated with current project

---------------------------Package----------------------
- Package === Project === Workspace
- a package is a collection of common source code files
- a package can have many related files inside of it
- each file ending with a file extention of GO (.go)
- the only requirement for every single file inside of a package is that the very first line of each file must declare the package that it belongs to
- Types of packages:
    > Executeable 
        o Generates a file that we can run
    > Reuseable
        o code used as 'helpers' good place to put reusable logic
- Summary
    > Executeable package 
        o Package main => defines a package that can be compiled and then "executed" must have func called main
    > Reuseable package
        o package calculator => defines a package that can be used as depedency (helper code)
        o package uploader => defines a package that can be used as depedency (helper code)

--------------------------import statement----------------------
- import statement is used to give our package access to some code that is written inside of another package
- fmt is the name of standard library package that is included with the go programming language by defualt
- fmt used to print out a lot of different information specifically to the terminal


